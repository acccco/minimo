$perspective: 800px;
$radius: 300px;
$box-width: 60px;
$box-height: 40px;
$gridInfo: 12, 17, 21, 24, 27, 29, 30, 29, 27, 24, 21, 17, 12;

.photo-wrap-all {
  @include size(100%);

  .pwa-stage {
    @include size(100%);
    perspective: $perspective;

    .pwa-view {
      @include size(100%);
      // @include posi(calc(50% - #{$box-height / 2}), calc(50% - #{$box-width / 2}));

      transform-style: preserve-3d;
      transform: rotateX(0deg) rotateY(0deg);
      transition: 1s;
      &.out-rotate {
        animation: outRotate 30s linear infinite;
      }
      &.in-rotate {
        animation: inRotate 60s linear infinite;
      }
      &.stop {
        animation-play-state: paused;
      }
    }

    .circle {
      $sum: 0;
      @for $index from 1 through length($gridInfo) {
        $num: nth($gridInfo, $index);
        $xGutter: 120deg / (length($gridInfo) - 1);

        @for $indexInner from 0 to $num {
          &.cel-#{$sum} {
            transform: rotateY($indexInner * 360deg / $num - 180deg + $index * 10deg)
              rotateX($xGutter * ($index - 1) - 60deg)
              translateZ(-$radius);
          }
          $sum: $sum + 1;
        }
      }
    }

    .pwa-cel {
      position: absolute;
      background: #ccc;
      user-select: none;
      border-radius: 4px;
      transition: 2s;
      opacity: 1;
      &.circle-before,
      &.circle {
        @include size($box-width, $box-height);
        @include posi(calc(50% - #{$box-height / 2}), calc(50% - #{$box-width / 2}));
      }
      &.circle {
        box-shadow: 0 0 4px rgba(#000000, 0.5);
      }
      &.flat,
      &.init {
        @include size(270px, 180px);
        transition: transform 1s, opacity 0.5s .5s;
      }
      &.init {
        transform: scale(3);
        opacity: 0;
      }
    }
  }
  .btn-stop {
    @include posi(10px, 10px);
    z-index: 2;
  }
  .btn-start {
    @include posi(10px, 50px);
    z-index: 2;
  }
  .btn-in {
    @include posi(40px, 10px);
    z-index: 2;
  }
  .btn-out {
    @include posi(40px, 50px);
    z-index: 2;
  }
}

@keyframes outRotate {
  0% {
    transform: rotateX(360deg) rotateY(-360deg);
  }

  100% {
    transform: rotateX(0deg) rotateY(-0deg);
  }
}

@for $index from 1 through length($gridInfo) {
  $xGutter: 120deg / (length($gridInfo) - 1);

  @keyframes inRotate-#{$index - 7} {
    0% {
      transform: translateZ($perspective) rotateX(60deg - $xGutter * ($index - 1)) rotateY(0deg);
    }

    100% {
      transform: translateZ($perspective) rotateX(60deg - $xGutter * ($index - 1)) rotateY(360deg);
    }
  }
}
